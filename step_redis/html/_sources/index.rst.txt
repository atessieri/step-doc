STEP Redis: Overview
====================

|Python version| |Code Style| |Typing| |Documentation|
|Tests| |Test coverage badge| |Docstring coverage badge|

.. list-table::
   :widths: 20 80
   :stub-columns: 1

   * - Version
     - |release|
   * - Release Date
     - August 26, 2025

.. toctree::
   :maxdepth: -1
   :hidden:
   :caption: STEP Redis:

   installation
   usage
   package_script
   architecture
   step_redis_rst/step_redis
   test_rst/test

STEP Redis is a specialized component of the STEP (Safer Transport for Europe Platform) ecosystem that
provides Redis stream integration for transport-related event processing. It enables real-time data
streaming and processing capabilities for transportation events, facilitating high-throughput and
low-latency communication between various components of intelligent transport systems.

Key Features
============

* **Redis Stream Integration**: Seamless connectivity with Redis for high-performance data streaming
* **Asynchronous Processing**: Handle transport events asynchronously for improved system responsiveness
* **Fault Tolerance**: Built-in error handling and recovery mechanisms
* **Scalable Architecture**: Designed to handle growing volumes of transport events
* **Pub/Sub Capabilities**: Support for publish-subscribe communication patterns
* **Configurable Consumer Groups**: Flexible event consumption strategies for different use cases

Purpose
=======

The STEP Redis module serves as a critical infrastructure component for real-time transport event 
processing. Its main purposes include:

* Enabling high-throughput, low-latency communication for transport events
* Providing a reliable messaging backbone for distributed transportation applications
* Supporting temporal analysis of transport data streams
* Facilitating real-time decision making for intelligent transport systems
* Bridging communication between various STEP ecosystem components

Getting Started
===============

To begin using the STEP Redis Streams, refer to the :doc:`installation<installation>`
section and refer to the :doc:`usage<usage>` section.

.. |Python version| image:: https://img.shields.io/badge/python-3.13%2B-blue.svg
   :target: https://www.python.org/downloads/
.. |Code Style| image:: https://img.shields.io/badge/code%20style-black-000000.svg
   :target: https://github.com/psf/black
.. |Typing| image:: https://img.shields.io/badge/typing-mypy-blue.svg
   :target:  https://mypy.readthedocs.io/en/stable/
.. |Documentation| image:: https://img.shields.io/badge/docs-sphinx-blue.svg
.. |Tests| image:: https://img.shields.io/badge/tests-pytest-orange.svg
   :target:  https://docs.pytest.org/en/stable/
.. |Test coverage badge| image:: ./badges/test_coverage.svg
.. |Docstring coverage badge| image:: ./badges/docstr_coverage.svg