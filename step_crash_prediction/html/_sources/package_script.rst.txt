==============
Package Script
==============

This section describes how to use the script inside the project.
The script is different for Windows and Linux.

.. note::
   The scripts use **uv** program. If it is not installed,
   it is necessary to install it first using **pip install uv**

------------------
Create environment
------------------

The script creates a virtual environment in the project folder.
The virtual environment is created in the folder *.venv* and 
the script will install all the dependencies in this folder.

.. tab:: Windows

   .. code-block:: console

      $.\create_env.bat <python version>

.. tab:: Linux

   .. code-block:: bash

      $source create_env.sh <python version>

After the environment is created, it is necessary to activate it.
The activation is done with the command:

.. tab:: Windows

   .. code-block:: console

      $.venv\Script\activate

.. tab:: Linux

   .. code-block:: bash

      $source .venv\bin\activate

----
Make
----

The script can be used on windows or linux with *make* installed.
The commands available are:

   #. Clean all temporary folder like build, schemas, rts_generated, etc:
   
      .. tab:: Windows

         .. code-block:: console

            $.\make.bat clean

      .. tab:: Linux

         .. code-block:: bash

            $make clean

   #. Execute the tests of the package:

      .. tab:: Windows

         .. code-block:: console

            $.\make.bat test

      .. tab:: Linux

         .. code-block:: bash

            $make test

   #. Generate API documentation in rst format:
   
      .. tab:: Windows

         .. code-block:: console

            $.\make.bat apidoc

      .. tab:: Linux

         .. code-block:: bash

            $make apidoc

   #. Check if all links in the documentation are valid:
   
      .. tab:: Windows

         .. code-block:: console

            $.\make.bat checklink

      .. tab:: Linux

         .. code-block:: bash

            $make checklink

   #. Create the documentation in html format:

      .. tab:: Windows

         .. code-block:: console

            $.\make.bat html

      .. tab:: Linux

         .. code-block:: bash

            $make html


   #. Create the documentation in latex format:

      .. tab:: Windows
         
         .. code-block:: console

            $.\make.bat latex
      
      .. tab:: Linux
         
         .. code-block:: bash

            $make latex

   #. Upload the package to the registry:

      .. tab:: Windows
         
         .. code-block:: console

            $.\make.bat upload
      
      .. tab:: Linux
         
         .. code-block:: bash

            $make upload

   #. List of all commands available:

      .. tab:: Windows
         
         .. code-block:: console

            $.\make.bat help
      
      .. tab:: Linux
         
         .. code-block:: bash

            $make help

--------------
PDF conversion
--------------

In order to create the pdf documentation, following the steps:

   #. Change the folder to the build folder:
      
      .. code-block:: console

         $cd build/latex

   #. Create the documentation in pdf format:
      
      .. code-block:: console

         $build/latex/make